{"version":3,"sources":["components/About.js","components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","props","classNameName","style","color","mode","className","id","type","backgroundColor","Navbar","src","alt","width","height","to","title","aboutText","onClick","toggleMode","role","htmlFor","modetext","placeholder","defaultProps","noVal","TextForm","useState","text","setText","length","charAt","split","heading","value","onChange","event","target","rows","newText","toUpperCase","alert","toLowerCase","i","document","getElementById","select","navigator","clipboard","writeText","toFixed","Alert","word","lower","slice","capitalize","msg","App","setmode","setmodeText","setalert","body","exact","path","eaxct","message","setTimeout","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.c8c2970c.chunk.js","sourcesContent":["//import React, {useState} from 'react'\r\n\r\nexport default function About(props) {\r\n\r\n    // const [myStyle, setMyStyle] = useState({  // JavaScript Object\r\n    //     color : 'black',\r\n    //     backgroundColor : 'white',\r\n    //     border : '1px solid white'\r\n        \r\n    // })\r\n\r\n    // const [modebtn, setModeBtn] = useState(\"Enable Dark Mode\")\r\n    // const [btncolor, setbtnColor] = useState(\"btn btn-dark\")\r\n    // const changeMode = ()=>{\r\n    //     if(myStyle.color === 'black'){\r\n    //         setMyStyle({\r\n    //             color : 'white',\r\n    //             backgroundColor : 'black',\r\n    //             border : '1px solid black'\r\n    //         })   \r\n    //         setModeBtn(\"Enable Light Mode\");\r\n    //         setbtnColor(\"btn btn-light\");\r\n    //     }\r\n        \r\n    //     else{\r\n    //         setMyStyle({\r\n    //             color : 'black',\r\n    //             backgroundColor : 'white',\r\n    //             border : '1px solid white'\r\n    //         })\r\n    //         setModeBtn(\"Enable Dark Mode\");\r\n    //         setbtnColor(\"btn btn-dark\");\r\n    //     }\r\n    // }\r\n    \r\n\r\n\r\n    return (\r\n        \r\n        <div classNameName=\"container\" style={{color:props.mode === 'dark' ? 'white' : 'black'}} >\r\n            <h1 className=\"my-3\"> About Us</h1>\r\n            <div className=\"accordion ml-3\" id=\"accordionExample\" style={{color:props.mode === 'dark' ? 'white' : 'black'}} >\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                    <button className=\"accordion-button collapsed\" type=\"button\" style={{backgroundColor:props.mode === 'dark' ? '#161414' : 'white', color:props.mode === 'dark' ? 'white' : 'black'}} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"false\" aria-controls=\"collapseOne\">\r\n                        Team\r\n                    </button>\r\n                    </h2>\r\n                    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n                    <div className=\"accordion-body\" style={{backgroundColor:props.mode === 'dark' ? '#161414' : 'white', color:props.mode === 'dark' ? 'white' : 'black'}}>\r\n                        <strong>Speedy Rent :</strong> Meet Jatin Shah, Pratyush Bhattacharya, Jiju Lin, Yu-Xuan Zhai\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                    <button className=\"accordion-button collapsed\" style={{backgroundColor:props.mode === 'dark' ? '#161414' : 'white', color:props.mode === 'dark' ? 'white' : 'black'}} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                        Batch of SE\r\n                    </button>\r\n                    </h2>\r\n                    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n                    <div className=\"accordion-body\" style={{backgroundColor:props.mode === 'dark' ? '#161414' : 'white', color:props.mode === 'dark' ? 'white' : 'black'}}>\r\n                        <strong>Fall 2021</strong> (Group 4)\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingThree\">\r\n                    <button className=\"accordion-button collapsed\"  style={{backgroundColor:props.mode === 'dark' ? '#161414' : 'white', color:props.mode === 'dark' ? 'white' : 'black'}} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                        Professor \r\n                    </button>\r\n                    </h2>\r\n                    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n                    <div className=\"accordion-body\" style={{backgroundColor:props.mode === 'dark' ? '#161414' : 'white', color:props.mode === 'dark' ? 'white' : 'black'}}>\r\n                        <strong>Kurt Seiffert</strong>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n\r\n            {/* <div className=\"container my-3\">\r\n               <button className = {btncolor} onClick={changeMode}>{modebtn}</button>     \r\n            </div> */}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react' //rpce\r\nimport PropTypes from 'prop-types' //impt\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n            <img src=\"logo.jpeg\" alt=\"\" width=\"30\" height=\"30\" className=\"d-inline-block align-text-top mx-2\"/>\r\n                <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                    <li className=\"nav-item\">\r\n                    <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n                    </li>\r\n                </ul>\r\n                <div className={`form-check form-switch text-${props.mode === 'light'?'dark':'light'} mx-3`}> {/* {` template literal `} and ? is ternary operator */}\r\n                    <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n                    <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">{props.modetext}</label>\r\n                </div>\r\n                <form className=\"d-flex\">\r\n                    <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n                    <button className={`btn btn-outline-${props.mode === 'light'?'dark':'light'} type=\"submit`}>Search</button>\r\n                </form>\r\n                \r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title : PropTypes.string.isRequired, \r\n    aboutText : PropTypes.string.isRequired // isRequired to not forget entering value in App.js <Navbar title = \" \" />\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title : 'Set title here',  // set default value if no entry in App.js with Navbar\r\n    aboutText : 'About text here'\r\n}\r\n","import React, {useState} from 'react'\r\n\r\n\r\nlet noVal = 0;\r\nexport default function TextForm(props) {\r\n    \r\n    const [text, setText] /*array destructuring*/ = useState('');\r\n    \r\n    \r\n    if(text.length === 0){\r\n        noVal = 0;\r\n    } \r\n    else{\r\n        \r\n        if(text.charAt(\" \")){\r\n            //console.log(noVal);\r\n            noVal = text.split(\" \").length;\r\n        }\r\n         \r\n    }\r\n\r\n    const handleUpClick = ()=> {\r\n        // console.log(\"Upper Case was clicked\");\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.alert(\"Converted to UpperCase\",\"success\");\r\n    }\r\n\r\n    const handleCCClick = ()=> {\r\n        let i = 0;\r\n        let newText = text.charAt(i).toUpperCase();\r\n        while( i < text.length){\r\n            if(text.charAt(i)===\" \"){\r\n                newText += text.charAt(i+1).toUpperCase();      \r\n            }\r\n            else\r\n                newText += text.charAt(i+1); \r\n            i++;    \r\n        }  \r\n        setText(newText);\r\n        props.alert(\"Converted to CapitalCase\",\"success\");\r\n    }\r\n    const handleCopyTextClick = ()=> {\r\n        let text = document.getElementById(\"myBox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.alert(\"Text Copied\",\"success\");\r\n    }\r\n    const handleInvertClick = ()=> {\r\n        let i = 1;\r\n        let newText\r\n        if(text.charAt(i-1) >= 'A' && text.charAt(i-1) <= 'Z'){\r\n            newText = text.charAt(i).toLowerCase();\r\n        }\r\n        else if(text.charAt(i-1) >= 'a' && text.charAt(i-1) <= 'z'){\r\n            newText = text.charAt(i).toUpperCase();\r\n        }\r\n        \r\n        while( i < text.length){\r\n            if(text.charAt(i) >= 'A' && text.charAt(i) <= 'Z'){\r\n                newText += text.charAt(i).toLowerCase();      \r\n            }\r\n            else\r\n                newText += text.charAt(i).toUpperCase(); \r\n            i++;    \r\n        }  \r\n        setText(newText);\r\n        props.alert(\"Converted to Inverted Text\",\"success\");\r\n    }\r\n\r\n    const handleLoClick = ()=> {\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.alert(\"Converted to LowerCase\",\"success\");\r\n    }\r\n\r\n    const handleOnChange = (event)=> {\r\n        // console.log(\"On Change\");\r\n        setText(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className=\"container\" style={{color:props.mode === 'dark' ? 'white' : 'black'}} /*one curly brace for JavaScript and second for object in JavaScript*/  >\r\n            <h2>{props.heading}</h2>\r\n            <div className=\"mb-3\">\r\n                <textarea className=\"form-control\" value = {text} onChange={handleOnChange} style={{backgroundColor:props.mode === 'dark' ? '#161414' : 'white', color:props.mode === 'dark' ? 'white' : 'black'}} placeholder =\"Enter Text Here\" id=\"myBox\" rows=\"3\"></textarea>\r\n            </div>\r\n            <button className={`btn btn-outline-${props.mode === 'light'?'primary':'light'}`} onClick = {handleUpClick}>Uppercase</button>\r\n            <button className={`btn btn-outline-${props.mode === 'light'?'primary':'light'} mx-2`} onClick = {handleLoClick}>Lowercase</button>\r\n            <button className={`btn btn-outline-${props.mode === 'light'?'primary':'light'} mx-2`} onClick = {handleCCClick}>Capitalized Case</button>\r\n            <button className={`btn btn-outline-${props.mode === 'light'?'primary':'light'} mx-2`} onClick = {handleInvertClick}>Inverted Text</button>\r\n            <button className={`btn btn-outline-${props.mode === 'light'?'primary':'light'} mx-2`} onClick = {handleCopyTextClick}>Copy Text</button>\r\n        </div>\r\n        <div className=\"container\" style={{color:props.mode === 'dark' ? 'white' : 'black'}}>\r\n            <div className=\"my-3\">\r\n                <h2>Text Summary</h2>\r\n            </div>\r\n            <p>{noVal} words and {text.length} characters</p>\r\n            <h3>Time required to read</h3>\r\n            <p>{(0.008*text.split(\" \").length).toFixed(3)} Minutes</p>\r\n            <h3>Preview</h3>\r\n            <p>{text.length>0 ? text:\"Enter something to preview\"}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong> : {props.alert.msg}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  //Link\n} from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setmode] = useState('light');\n  const [modetext, setmodeText] = useState(\"Enable Dark Mode\");\n  const [alert, setalert] = useState(null);\n  \n\n  const showalert = (message,type)=>{\n    setalert({\n      msg : message,\n      type : type\n    })\n    setTimeout(() => {\n      setalert(null)\n    }, 1000);\n  }\n  const toggleMode = ()=> {\n    if (mode === 'light') {\n      setmode('dark');\n      document.body.style.backgroundColor = '#042743';\n      setmodeText(\"Enable Light Mode\");\n      // showalert(\"Dark Mode Enabled\",\"success\");\n      //document.title =\"Speedy Rent - Dark Mode\";\n    }\n    else {\n      setmode('light');\n      document.body.style.backgroundColor = 'white';\n      setmodeText(\"Enable Dark Mode\");\n      //showalert(\"Light Mode Enabled\",\"success\");\n      //document.title = \"Speedy Rent - Light Mode\";\n    }\n  }\n  return (\n    <>\n    <Router>\n     <Navbar title =\"Speedy Rent Demo\" aboutText =\"About\" mode ={mode} toggleMode={toggleMode} modetext={modetext} />\n     <Alert alert = {alert} />\n     <div className=\"container my-3\"> {/* my-3 is margin of 3 in y axis, container is class of bootstrap */}\n     <Switch>\n          <Route exact path=\"/about\">\n            <About mode={mode}/>\n          </Route>\n          <Route eaxct path=\"/\">\n            <TextForm alert = {showalert} heading = \"Enter text to analyze\" mode={mode} />\n          </Route>\n      </Switch>\n            \n        {/* <About /> */}\n     </div>\n    </Router>\n    </>  \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}